version: '3.8'

services:
  compactify-web:
    build: .
    container_name: compactify-app
    ports:
      - "5000:5000"
    volumes:
      - ./app/static/uploads:/app/app/static/uploads
      - ./app/static/CompressImg:/app/app/static/CompressImg
      - ./app/static/CompressPdf:/app/app/static/CompressPdf
      - ./app/static/docToPdf:/app/app/static/docToPdf
      - ./app/static/imagetopdf:/app/app/static/imagetopdf
      - ./app/static/imgtogray:/app/app/static/imgtogray
      - ./app/static/removeBackground:/app/app/static/removeBackground
      - ./app/static/zip:/app/app/static/zip
      - ./app/static/CompressAudio:/app/app/static/CompressAudio
    environment:
      - FLASK_ENV=production
      - FLASK_APP=server.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add PostgreSQL database if needed
  # compactify-db:
  #   image: postgres:13
  #   container_name: compactify-postgres
  #   environment:
  #     POSTGRES_DB: compactify
  #     POSTGRES_USER: compactify_user
  #     POSTGRES_PASSWORD: secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

# volumes:
#   postgres_data:
